<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdou.teaching.mbg.mapper.ExperimentMasterMapper">
  <resultMap id="BaseResultMap" type="com.gdou.teaching.mbg.model.ExperimentMaster">
    <id column="experiment_id" jdbcType="INTEGER" property="experimentId" />
    <result column="experiment_name" jdbcType="VARCHAR" property="experimentName" />
    <result column="experiment_intro" jdbcType="VARCHAR" property="experimentIntro" />
    <result column="experiment_detail_id" jdbcType="INTEGER" property="experimentDetailId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="experiment_answer_id" jdbcType="INTEGER" property="experimentAnswerId" />
    <result column="experiment_commit_num" jdbcType="INTEGER" property="experimentCommitNum" />
    <result column="experiment_participation_number" jdbcType="INTEGER" property="experimentParticipationNumber" />
    <result column="valve" jdbcType="REAL" property="valve" />
    <result column="punishment" jdbcType="REAL" property="punishment" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="experiment_status" jdbcType="TINYINT" property="experimentStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    experiment_id, experiment_name, experiment_intro, experiment_detail_id, course_id, 
    experiment_answer_id, experiment_commit_num, experiment_participation_number, valve, 
    punishment, create_time, update_time, experiment_status
  </sql>
  <select id="selectByExample" parameterType="com.gdou.teaching.mbg.model.ExperimentMasterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from experiment_master
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from experiment_master
    where experiment_id = #{experimentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from experiment_master
    where experiment_id = #{experimentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gdou.teaching.mbg.model.ExperimentMasterExample">
    delete from experiment_master
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gdou.teaching.mbg.model.ExperimentMaster">
    <selectKey keyProperty="experimentId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into experiment_master (experiment_name, experiment_intro, 
      experiment_detail_id, course_id, experiment_answer_id, 
      experiment_commit_num, experiment_participation_number, 
      valve, punishment, create_time, 
      update_time, experiment_status)
    values (#{experimentName,jdbcType=VARCHAR}, #{experimentIntro,jdbcType=VARCHAR}, 
      #{experimentDetailId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{experimentAnswerId,jdbcType=INTEGER}, 
      #{experimentCommitNum,jdbcType=INTEGER}, #{experimentParticipationNumber,jdbcType=INTEGER}, 
      #{valve,jdbcType=REAL}, #{punishment,jdbcType=REAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{experimentStatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.gdou.teaching.mbg.model.ExperimentMaster">
    <selectKey keyProperty="experimentId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into experiment_master
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="experimentName != null">
        experiment_name,
      </if>
      <if test="experimentIntro != null">
        experiment_intro,
      </if>
      <if test="experimentDetailId != null">
        experiment_detail_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="experimentAnswerId != null">
        experiment_answer_id,
      </if>
      <if test="experimentCommitNum != null">
        experiment_commit_num,
      </if>
      <if test="experimentParticipationNumber != null">
        experiment_participation_number,
      </if>
      <if test="valve != null">
        valve,
      </if>
      <if test="punishment != null">
        punishment,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="experimentStatus != null">
        experiment_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="experimentName != null">
        #{experimentName,jdbcType=VARCHAR},
      </if>
      <if test="experimentIntro != null">
        #{experimentIntro,jdbcType=VARCHAR},
      </if>
      <if test="experimentDetailId != null">
        #{experimentDetailId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="experimentAnswerId != null">
        #{experimentAnswerId,jdbcType=INTEGER},
      </if>
      <if test="experimentCommitNum != null">
        #{experimentCommitNum,jdbcType=INTEGER},
      </if>
      <if test="experimentParticipationNumber != null">
        #{experimentParticipationNumber,jdbcType=INTEGER},
      </if>
      <if test="valve != null">
        #{valve,jdbcType=REAL},
      </if>
      <if test="punishment != null">
        #{punishment,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="experimentStatus != null">
        #{experimentStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gdou.teaching.mbg.model.ExperimentMasterExample" resultType="java.lang.Integer">
    select count(*) from experiment_master
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update experiment_master
    <set>
      <if test="record.experimentId != null">
        experiment_id = #{record.experimentId,jdbcType=INTEGER},
      </if>
      <if test="record.experimentName != null">
        experiment_name = #{record.experimentName,jdbcType=VARCHAR},
      </if>
      <if test="record.experimentIntro != null">
        experiment_intro = #{record.experimentIntro,jdbcType=VARCHAR},
      </if>
      <if test="record.experimentDetailId != null">
        experiment_detail_id = #{record.experimentDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.experimentAnswerId != null">
        experiment_answer_id = #{record.experimentAnswerId,jdbcType=INTEGER},
      </if>
      <if test="record.experimentCommitNum != null">
        experiment_commit_num = #{record.experimentCommitNum,jdbcType=INTEGER},
      </if>
      <if test="record.experimentParticipationNumber != null">
        experiment_participation_number = #{record.experimentParticipationNumber,jdbcType=INTEGER},
      </if>
      <if test="record.valve != null">
        valve = #{record.valve,jdbcType=REAL},
      </if>
      <if test="record.punishment != null">
        punishment = #{record.punishment,jdbcType=REAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.experimentStatus != null">
        experiment_status = #{record.experimentStatus,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update experiment_master
    set experiment_id = #{record.experimentId,jdbcType=INTEGER},
      experiment_name = #{record.experimentName,jdbcType=VARCHAR},
      experiment_intro = #{record.experimentIntro,jdbcType=VARCHAR},
      experiment_detail_id = #{record.experimentDetailId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      experiment_answer_id = #{record.experimentAnswerId,jdbcType=INTEGER},
      experiment_commit_num = #{record.experimentCommitNum,jdbcType=INTEGER},
      experiment_participation_number = #{record.experimentParticipationNumber,jdbcType=INTEGER},
      valve = #{record.valve,jdbcType=REAL},
      punishment = #{record.punishment,jdbcType=REAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      experiment_status = #{record.experimentStatus,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gdou.teaching.mbg.model.ExperimentMaster">
    update experiment_master
    <set>
      <if test="experimentName != null">
        experiment_name = #{experimentName,jdbcType=VARCHAR},
      </if>
      <if test="experimentIntro != null">
        experiment_intro = #{experimentIntro,jdbcType=VARCHAR},
      </if>
      <if test="experimentDetailId != null">
        experiment_detail_id = #{experimentDetailId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="experimentAnswerId != null">
        experiment_answer_id = #{experimentAnswerId,jdbcType=INTEGER},
      </if>
      <if test="experimentCommitNum != null">
        experiment_commit_num = #{experimentCommitNum,jdbcType=INTEGER},
      </if>
      <if test="experimentParticipationNumber != null">
        experiment_participation_number = #{experimentParticipationNumber,jdbcType=INTEGER},
      </if>
      <if test="valve != null">
        valve = #{valve,jdbcType=REAL},
      </if>
      <if test="punishment != null">
        punishment = #{punishment,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="experimentStatus != null">
        experiment_status = #{experimentStatus,jdbcType=TINYINT},
      </if>
    </set>
    where experiment_id = #{experimentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gdou.teaching.mbg.model.ExperimentMaster">
    update experiment_master
    set experiment_name = #{experimentName,jdbcType=VARCHAR},
      experiment_intro = #{experimentIntro,jdbcType=VARCHAR},
      experiment_detail_id = #{experimentDetailId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      experiment_answer_id = #{experimentAnswerId,jdbcType=INTEGER},
      experiment_commit_num = #{experimentCommitNum,jdbcType=INTEGER},
      experiment_participation_number = #{experimentParticipationNumber,jdbcType=INTEGER},
      valve = #{valve,jdbcType=REAL},
      punishment = #{punishment,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      experiment_status = #{experimentStatus,jdbcType=TINYINT}
    where experiment_id = #{experimentId,jdbcType=INTEGER}
  </update>
</mapper>