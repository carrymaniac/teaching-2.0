<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdou.teaching.mbg.mapper.CourseMasterMapper">
  <resultMap id="BaseResultMap" type="com.gdou.teaching.mbg.model.CourseMaster">
    <id column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="course_detail_id" jdbcType="INTEGER" property="courseDetailId" />
    <result column="course_status" jdbcType="TINYINT" property="courseStatus" />
    <result column="course_number" jdbcType="INTEGER" property="courseNumber" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="course_cover" jdbcType="VARCHAR" property="courseCover" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_id, course_name, teacher_id, course_detail_id, course_status, course_number, 
    create_time, update_time, course_cover
  </sql>
  <select id="selectByExample" parameterType="com.gdou.teaching.mbg.model.CourseMasterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_master
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_master
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course_master
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gdou.teaching.mbg.model.CourseMasterExample">
    delete from course_master
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gdou.teaching.mbg.model.CourseMaster">
    <selectKey keyProperty="courseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_master (course_name, teacher_id, course_detail_id, 
      course_status, course_number, create_time, 
      update_time, course_cover)
    values (#{courseName,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER}, #{courseDetailId,jdbcType=INTEGER}, 
      #{courseStatus,jdbcType=TINYINT}, #{courseNumber,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{courseCover,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gdou.teaching.mbg.model.CourseMaster">
    <selectKey keyProperty="courseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_master
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseName != null">
        course_name,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="courseDetailId != null">
        course_detail_id,
      </if>
      <if test="courseStatus != null">
        course_status,
      </if>
      <if test="courseNumber != null">
        course_number,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="courseCover != null">
        course_cover,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="courseDetailId != null">
        #{courseDetailId,jdbcType=INTEGER},
      </if>
      <if test="courseStatus != null">
        #{courseStatus,jdbcType=TINYINT},
      </if>
      <if test="courseNumber != null">
        #{courseNumber,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseCover != null">
        #{courseCover,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gdou.teaching.mbg.model.CourseMasterExample" resultType="java.lang.Integer">
    select count(*) from course_master
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course_master
    <set>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.courseDetailId != null">
        course_detail_id = #{record.courseDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.courseStatus != null">
        course_status = #{record.courseStatus,jdbcType=TINYINT},
      </if>
      <if test="record.courseNumber != null">
        course_number = #{record.courseNumber,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.courseCover != null">
        course_cover = #{record.courseCover,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course_master
    set course_id = #{record.courseId,jdbcType=INTEGER},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      course_detail_id = #{record.courseDetailId,jdbcType=INTEGER},
      course_status = #{record.courseStatus,jdbcType=TINYINT},
      course_number = #{record.courseNumber,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      course_cover = #{record.courseCover,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gdou.teaching.mbg.model.CourseMaster">
    update course_master
    <set>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="courseDetailId != null">
        course_detail_id = #{courseDetailId,jdbcType=INTEGER},
      </if>
      <if test="courseStatus != null">
        course_status = #{courseStatus,jdbcType=TINYINT},
      </if>
      <if test="courseNumber != null">
        course_number = #{courseNumber,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseCover != null">
        course_cover = #{courseCover,jdbcType=VARCHAR},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gdou.teaching.mbg.model.CourseMaster">
    update course_master
    set course_name = #{courseName,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      course_detail_id = #{courseDetailId,jdbcType=INTEGER},
      course_status = #{courseStatus,jdbcType=TINYINT},
      course_number = #{courseNumber,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      course_cover = #{courseCover,jdbcType=VARCHAR}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
</mapper>