<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.gdou.teaching.dao.MessageDao">
    <resultMap id="BaseResultMap" type="com.gdou.teaching.mbg.model.Message">
        <id column="message_id" jdbcType="INTEGER" property="messageId" />
        <result column="from_id" jdbcType="INTEGER" property="fromId" />
        <result column="to_id" jdbcType="INTEGER" property="toId" />
        <result column="content" jdbcType="VARCHAR" property="content" />
        <result column="conversation_id" jdbcType="VARCHAR" property="conversationId" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>

    <sql id="selectFields">
        message_id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <select id="selectConversations" resultType="com.gdou.teaching.mbg.model.Message">
        select <include refid="selectFields"></include>
        from message
        where message_id in(
            select max(message_id) from message
            where status != 2
            and from_id != 0
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        )
        order by message_id desc
        limit #{offset}, #{limit}
    </select>

</mapper>